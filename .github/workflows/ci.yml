name: Java CI with Maven & Docker & K8s manifests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-and-dockerize:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [user-service, order-service]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ☕ Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: 🔨 Build & Test with Maven
      run: mvn -B -f ${{ matrix.service }}/pom.xml clean verify

    - name: 📄 Upload JUnit Test Report
      if: always() # auch bei Testfehlern speichern
      uses: actions/upload-artifact@v4
      with:
        name: junit-report-${{ matrix.service }}
        path: ${{ matrix.service }}/target/surefire-reports/
        retention-days: 7

    - name: 🔐 Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 🐳 Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./${{ matrix.service }}
        file: ./${{ matrix.service }}/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest

  k8s-manifests-lint:
    name: "Lint Kubernetes YAML"
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔎 Install kubeval
        run: |
          curl -sSL -o kubeval https://github.com/instrumenta/kubeval/releases/download/0.16.1/kubeval-linux-amd64
          chmod +x kubeval
          sudo mv kubeval /usr/local/bin/

      - name: ⚙️ Validate all K8s manifests
        run: |
          find ./deploy/k8s/ -type f -name '*.yaml' -exec kubeval {} \;

      - name: 📄 Upload validated manifests
        uses: actions/upload-artifact@v4
        with:
          name: k8s-manifests
          path: deploy/k8s/